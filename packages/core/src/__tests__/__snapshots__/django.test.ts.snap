// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Django > svelte > Javascript Test > basic 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() name = \\"Steve\\";

  render() {
    return (
      <div>
        <input
          onInput={(event) => (this.name = event.target.value)}
          value={this.name}
        />
        Hello! I can run in React, Vue, Solid, or Liquid!
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > bindGroup 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() tortilla = \\"Plain\\";
  @State() fillings = [];

  render() {
    return (
      <div>
        <input
          type=\\"radio\\"
          value=\\"Plain\\"
          checked={this.tortilla === \\"Plain\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <input
          type=\\"radio\\"
          value=\\"Whole wheat\\"
          checked={this.tortilla === \\"Whole wheat\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <input
          type=\\"radio\\"
          value=\\"Spinach\\"
          checked={this.tortilla === \\"Spinach\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <br />
        <br />
        <input
          type=\\"checkbox\\"
          value=\\"Rice\\"
          checked={this.fillings === \\"Rice\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Beans\\"
          checked={this.fillings === \\"Beans\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Cheese\\"
          checked={this.fillings === \\"Cheese\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Guac (extra)\\"
          checked={this.fillings === \\"Guac (extra)\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <p>
          Tortilla:
          {this.tortilla}
        </p>
        <p>
          Fillings:
          {this.fillings}
        </p>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > bindProperty 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() value = \\"hello\\";

  render() {
    return <input value={this.value} />;
  }
}
"
`;

exports[`Django > svelte > Javascript Test > classDirective 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @Prop() disabled: any;

  @State() focus = true;

  render() {
    return (
      <input
        class={\`form-input \${props.disabled ? \\"disabled\\" : \\"\\"} \${
          state.focus ? \\"focus\\" : \\"\\"
        }\`}
      />
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > context 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() activeTab = 0;

  render() {
    return <div>{this.activeTab}</div>;
  }
}
"
`;

exports[`Django > svelte > Javascript Test > each 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() numbers = [\\"one\\", \\"two\\", \\"three\\"];

  render() {
    return (
      <ul>
        {this.numbers?.map((num) => (
          <li>{num}</li>
        ))}
      </ul>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > eventHandlers 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  log = function log(msg = \\"hello\\") {
    console.log(msg);
  };

  render() {
    return (
      <div>
        <button onClick={(a) => this.log(\\"hi\\")}>Log</button>
        <button onClick={(event) => this.log(event)}>Log</button>
        <button onClick={(event) => this.log(event)}>Log</button>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > html 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() html = \\"<b>bold</b>\\";

  render() {
    return <div innerHTML={this.html}></div>;
  }
}
"
`;

exports[`Django > svelte > Javascript Test > ifElse 1`] = `
"':' expected. (25:14)
  23 |       return (
  24 |
> 25 |         {this.show ? (
     |              ^
  26 |     <button  onClick={event => this.toggle(event)} > Hide </button>
  27 |   ) : <button  onClick={event => this.toggle(event)} > Show </button>}
  28 |"
`;

exports[`Django > svelte > Javascript Test > imports 1`] = `
"import Button from \\"./Button\\";

import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() disabled = false;

  render() {
    return (
      <div>
        <Button type=\\"button\\" disabled={this.disabled}>
          <Slot></Slot>
        </Button>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > lifecycleHooks 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  componentDidLoad() {
    console.log(\\"onMount\\");
  }
  disconnectedCallback() {
    console.log(\\"onDestroy\\");
  }
  componentDidUpdate() {
    console.log(\\"onAfterUpdate\\");
  }

  render() {
    return <div></div>;
  }
}
"
`;

exports[`Django > svelte > Javascript Test > reactive 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() name = \\"Steve\\";

  get lowercaseName() {
    return this.name.toLowerCase();
  }

  render() {
    return (
      <div>
        <input value={this.name} />
        Lowercase:
        {this.lowercaseName}
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > reactiveWithFn 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() a = 2;
  @State() b = 5;
  @State() result = null;

  calculateResult = function calculateResult(a_, b_) {
    this.result = a_ * b_;
  };

  componentDidUpdate() {
    this.calculateResult(this.a, this.b);
  }

  render() {
    return (
      <div>
        <input
          type=\\"number\\"
          onInput={(event) => (this.a = event.target.value)}
          value={this.a}
        />
        <input
          type=\\"number\\"
          onInput={(event) => (this.b = event.target.value)}
          value={this.b}
        />
        Result:
        {this.result}
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > slots 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  render() {
    return (
      <div>
        <Slot>default</Slot>
        <Slot name=\\"Test\\">
          <div>default</div>
        </Slot>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Javascript Test > style 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
  styles: \`
        input {
          color: red;
          font-size: 12px;
        }

        .form-input:focus {
          outline: 1px solid blue;
        }
\`,
})
export default class MyComponent {
  render() {
    return <input class=\\"form-input\\" />;
  }
}
"
`;

exports[`Django > svelte > Javascript Test > textExpressions 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() a = 5;
  @State() b = 12;

  render() {
    return (
      <div>
        normal:
        {this.a + this.b}
        <br />
        conditional
        {this.a > 2 ? \\"hello\\" : \\"bye\\"}
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > basic 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() name = \\"Steve\\";

  render() {
    return (
      <div>
        <input
          onInput={(event) => (this.name = event.target.value)}
          value={this.name}
        />
        Hello! I can run in React, Vue, Solid, or Liquid!
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > bindGroup 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() tortilla = \\"Plain\\";
  @State() fillings = [];

  render() {
    return (
      <div>
        <input
          type=\\"radio\\"
          value=\\"Plain\\"
          checked={this.tortilla === \\"Plain\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <input
          type=\\"radio\\"
          value=\\"Whole wheat\\"
          checked={this.tortilla === \\"Whole wheat\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <input
          type=\\"radio\\"
          value=\\"Spinach\\"
          checked={this.tortilla === \\"Spinach\\"}
          onInput={(event) => (this.tortilla = event.target.value)}
        />
        <br />
        <br />
        <input
          type=\\"checkbox\\"
          value=\\"Rice\\"
          checked={this.fillings === \\"Rice\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Beans\\"
          checked={this.fillings === \\"Beans\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Cheese\\"
          checked={this.fillings === \\"Cheese\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <input
          type=\\"checkbox\\"
          value=\\"Guac (extra)\\"
          checked={this.fillings === \\"Guac (extra)\\"}
          onInput={(event) => (this.fillings = event.target.value)}
        />
        <p>
          Tortilla:
          {this.tortilla}
        </p>
        <p>
          Fillings:
          {this.fillings}
        </p>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > bindProperty 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() value = \\"hello\\";

  render() {
    return <input value={this.value} />;
  }
}
"
`;

exports[`Django > svelte > Typescript Test > classDirective 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @Prop() disabled: any;

  @State() focus = true;

  render() {
    return (
      <input
        class={\`form-input \${props.disabled ? \\"disabled\\" : \\"\\"} \${
          state.focus ? \\"focus\\" : \\"\\"
        }\`}
      />
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > context 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() activeTab = 0;

  render() {
    return <div>{this.activeTab}</div>;
  }
}
"
`;

exports[`Django > svelte > Typescript Test > each 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() numbers = [\\"one\\", \\"two\\", \\"three\\"];

  render() {
    return (
      <ul>
        {this.numbers?.map((num) => (
          <li>{num}</li>
        ))}
      </ul>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > eventHandlers 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  log = function log(msg = \\"hello\\") {
    console.log(msg);
  };

  render() {
    return (
      <div>
        <button onClick={(a) => this.log(\\"hi\\")}>Log</button>
        <button onClick={(event) => this.log(event)}>Log</button>
        <button onClick={(event) => this.log(event)}>Log</button>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > html 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() html = \\"<b>bold</b>\\";

  render() {
    return <div innerHTML={this.html}></div>;
  }
}
"
`;

exports[`Django > svelte > Typescript Test > ifElse 1`] = `
"':' expected. (25:14)
  23 |       return (
  24 |
> 25 |         {this.show ? (
     |              ^
  26 |     <button  onClick={event => this.toggle(event)} > Hide </button>
  27 |   ) : <button  onClick={event => this.toggle(event)} > Show </button>}
  28 |"
`;

exports[`Django > svelte > Typescript Test > imports 1`] = `
"import Button from \\"./Button\\";

import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() disabled = false;

  render() {
    return (
      <div>
        <Button type=\\"button\\" disabled={this.disabled}>
          <Slot></Slot>
        </Button>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > lifecycleHooks 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  componentDidLoad() {
    console.log(\\"onMount\\");
  }
  disconnectedCallback() {
    console.log(\\"onDestroy\\");
  }
  componentDidUpdate() {
    console.log(\\"onAfterUpdate\\");
  }

  render() {
    return <div></div>;
  }
}
"
`;

exports[`Django > svelte > Typescript Test > reactive 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() name = \\"Steve\\";

  get lowercaseName() {
    return this.name.toLowerCase();
  }

  render() {
    return (
      <div>
        <input value={this.name} />
        Lowercase:
        {this.lowercaseName}
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > reactiveWithFn 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() a = 2;
  @State() b = 5;
  @State() result = null;

  calculateResult = function calculateResult(a_, b_) {
    this.result = a_ * b_;
  };

  componentDidUpdate() {
    this.calculateResult(this.a, this.b);
  }

  render() {
    return (
      <div>
        <input
          type=\\"number\\"
          onInput={(event) => (this.a = event.target.value)}
          value={this.a}
        />
        <input
          type=\\"number\\"
          onInput={(event) => (this.b = event.target.value)}
          value={this.b}
        />
        Result:
        {this.result}
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > slots 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  render() {
    return (
      <div>
        <Slot>default</Slot>
        <Slot name=\\"Test\\">
          <div>default</div>
        </Slot>
      </div>
    );
  }
}
"
`;

exports[`Django > svelte > Typescript Test > style 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
  styles: \`
        input {
          color: red;
          font-size: 12px;
        }

        .form-input:focus {
          outline: 1px solid blue;
        }
\`,
})
export default class MyComponent {
  render() {
    return <input class=\\"form-input\\" />;
  }
}
"
`;

exports[`Django > svelte > Typescript Test > textExpressions 1`] = `
"import { Component, Prop, h, State, Fragment } from \\"@django/core\\";

@Component({
  tag: \\"my-component\\",
})
export default class MyComponent {
  @State() a = 5;
  @State() b = 12;

  render() {
    return (
      <div>
        normal:
        {this.a + this.b}
        <br />
        conditional
        {this.a > 2 ? \\"hello\\" : \\"bye\\"}
      </div>
    );
  }
}
"
`;
